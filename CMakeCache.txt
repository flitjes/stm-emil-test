# This is the CMakeCache file.
# For build in directory: c:/Users/Administrator/Documents/git/Philips Bionic Hand
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build shared instead of static library
BUILD_SHARED_LIBS:BOOL=OFF

//Path to a program.
CLANGFORMAT:FILEPATH=CLANGFORMAT-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/lib.exe

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//Enable warnings-as-error
CMAKE_COMPILE_WARNING_AS_ERROR:BOOL=ON

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Directory relative to CMAKE_INSTALL to install the cmake configuration
// files
CMAKE_INSTALL_CMAKEDIR:STRING=cmake

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//Directory relative to CMAKE_INSTALL_DATA to install examples
CMAKE_INSTALL_EXAMPLEDIR:STRING=examples

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/MyProject

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=MyProject

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=1.0.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build 7-Zip packages
CPACK_BINARY_7Z:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build Inno Setup packages
CPACK_BINARY_INNOSETUP:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build NuGet packages
CPACK_BINARY_NUGET:BOOL=OFF

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Enable to build 7-Zip source packages
CPACK_SOURCE_7Z:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//Path to a program.
DOCKER:FILEPATH=C:/Program Files/Docker/Docker/resources/bin/docker.exe

//Build and install the Protobuf ECHO compilers
EMIL_BUILD_ECHO_COMPILERS:BOOL=OFF

//Enable building the examples
EMIL_BUILD_EXAMPLES:BOOL=OFF

//Enable building the tests
EMIL_BUILD_TESTS:BOOL=OFF

//Enable compiler flags for code coverage measurements
EMIL_ENABLE_COVERAGE:BOOL=OFF

//Enable shift-left tools (e.g. linters, formatters) that are run
// using Docker
EMIL_ENABLE_DOCKER_TOOLS:BOOL=ON

//Enable building the fuzzing targets
EMIL_ENABLE_FUZZING:BOOL=OFF

//Enable compiler flags for mutation testing
EMIL_ENABLE_MUTATION_TESTING:BOOL=OFF

//Enable Tracing
EMIL_ENABLE_TRACING:BOOL=ON

//Specify an external LWIP target
EMIL_EXTERNAL_LWIP_TARGET:STRING=

//Enable generation of package configuration and install files
EMIL_GENERATE_PACKAGE_CONFIG:BOOL=ON

//Include FreeRTOS as part of EmIL
EMIL_INCLUDE_FREERTOS:BOOL=OFF

//Include MbedTLS as part of EmIL
EMIL_INCLUDE_MBEDTLS:BOOL=ON

//Include support for Segger RTT
EMIL_INCLUDE_SEGGER_RTT:BOOL=OFF

//Include ThreadX as part of EmIL (Incomplete, experimental)
EMIL_INCLUDE_THREADX:BOOL=OFF

//Additional arguments for the mutation testing runner
EMIL_MUTATION_TESTING_RUNNER_ARGUMENTS:STRING=

//Directory under which to collect all populated content
FETCHCONTENT_BASE_DIR:PATH=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps

//Disables all attempts to download or update content and assumes
// source dirs already exist
FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF

//Enables QUIET option for all content population
FETCHCONTENT_QUIET:BOOL=ON

//When not empty, overrides where to find pre-populated content
// for args
FETCHCONTENT_SOURCE_DIR_ARGS:PATH=

//When not empty, overrides where to find pre-populated content
// for emil
FETCHCONTENT_SOURCE_DIR_EMIL:PATH=

//When not empty, overrides where to find pre-populated content
// for halst
FETCHCONTENT_SOURCE_DIR_HALST:PATH=

//When not empty, overrides where to find pre-populated content
// for lwip
FETCHCONTENT_SOURCE_DIR_LWIP:PATH=

//When not empty, overrides where to find pre-populated content
// for mbedtls
FETCHCONTENT_SOURCE_DIR_MBEDTLS:PATH=

//When not empty, overrides where to find pre-populated content
// for microecc
FETCHCONTENT_SOURCE_DIR_MICROECC:PATH=

//When not empty, overrides where to find pre-populated content
// for protobuf
FETCHCONTENT_SOURCE_DIR_PROTOBUF:PATH=

//When not empty, overrides where to find pre-populated content
// for protoc
FETCHCONTENT_SOURCE_DIR_PROTOC:PATH=

//When not empty, overrides where to find pre-populated content
// for pugixml
FETCHCONTENT_SOURCE_DIR_PUGIXML:PATH=

//Enables UPDATE_DISCONNECTED behavior for all content population
FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of args
FETCHCONTENT_UPDATES_DISCONNECTED_ARGS:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of emil
FETCHCONTENT_UPDATES_DISCONNECTED_EMIL:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of halst
FETCHCONTENT_UPDATES_DISCONNECTED_HALST:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of lwip
FETCHCONTENT_UPDATES_DISCONNECTED_LWIP:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of mbedtls
FETCHCONTENT_UPDATES_DISCONNECTED_MBEDTLS:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of microecc
FETCHCONTENT_UPDATES_DISCONNECTED_MICROECC:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of protobuf
FETCHCONTENT_UPDATES_DISCONNECTED_PROTOBUF:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of protoc
FETCHCONTENT_UPDATES_DISCONNECTED_PROTOC:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of pugixml
FETCHCONTENT_UPDATES_DISCONNECTED_PUGIXML:BOOL=OFF

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/mingw64/bin/git.exe

//Enable build of the examples
HALST_BUILD_EXAMPLES:BOOL=OFF

//Enable build of the FreeRTOS example
HALST_BUILD_EXAMPLES_FREERTOS:BOOL=OFF

//Include default initialization code; turn off when providing
// custom initialization
HALST_INCLUDE_DEFAULT_INIT:BOOL=ON

//XML GPIO table
HALST_XML_GPIO:STRING=

//XML STM32 table
HALST_XML_STM32:STRING=

//Install mbed TLS headers.
INSTALL_MBEDTLS_HEADERS:BOOL=ON

//Explicitly link mbed TLS library to pthread.
LINK_WITH_PTHREAD:BOOL=OFF

//Explicitly link mbed TLS library to trusted_storage.
LINK_WITH_TRUSTED_STORAGE:BOOL=OFF

//Compiler warnings treated as errors
MBEDTLS_FATAL_WARNINGS:BOOL=ON

//Build the libraries with /MT compiler flag
MSVC_STATIC_RUNTIME:BOOL=OFF

//Value Computed by CMake
MyProject_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand

//Value Computed by CMake
MyProject_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
MyProject_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand

//Build defines for custom options
PUGIXML_BUILD_DEFINES:STRING=

//Enable compact mode
PUGIXML_COMPACT:BOOL=OFF

//Disable Exceptions
PUGIXML_NO_EXCEPTIONS:BOOL=OFF

//Disable STL
PUGIXML_NO_STL:BOOL=OFF

//Disable XPath
PUGIXML_NO_XPATH:BOOL=OFF

//Use static MSVC RT libraries
PUGIXML_STATIC_CRT:BOOL=OFF

//Enable wchar_t mode
PUGIXML_WCHAR_MODE:BOOL=OFF

//Allow unsafe builds. These builds ARE NOT SECURE.
UNSAFE_BUILD:BOOL=OFF

//Build mbed TLS shared library.
USE_SHARED_MBEDTLS_LIBRARY:BOOL=OFF

//Build mbed TLS static library.
USE_STATIC_MBEDTLS_LIBRARY:BOOL=ON

//Value Computed by CMake
args_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/args-build

//Value Computed by CMake
args_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
args_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/args-src

//Value Computed by CMake
emil_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/emil-build

//Value Computed by CMake
emil_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
emil_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/emil-src

//Value Computed by CMake
hal_st_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/halst-build

//Value Computed by CMake
hal_st_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
hal_st_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/halst-src

//Dependencies for the target
libprotoc_LIB_DEPENDS:STATIC=general;libprotobuf;

//Value Computed by CMake
mbed TLS_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/mbedtls-build

//Value Computed by CMake
mbed TLS_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
mbed TLS_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/mbedtls-src

//Dependencies for the target
mbedcrypto_LIB_DEPENDS:STATIC=general;ws2_32;

//Dependencies for the target
mbedtls_LIB_DEPENDS:STATIC=general;ws2_32;general;mbedx509;

//Dependencies for the target
mbedx509_LIB_DEPENDS:STATIC=general;ws2_32;general;mbedcrypto;

//Value Computed by CMake
protobuf_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/protobuf-build

//Build conformance tests
protobuf_BUILD_CONFORMANCE:BOOL=OFF

//Build examples
protobuf_BUILD_EXAMPLES:BOOL=OFF

//Build libprotoc and protoc compiler
protobuf_BUILD_PROTOC_BINARIES:BOOL=ON

//Build Shared Libraries
protobuf_BUILD_SHARED_LIBS:BOOL=OFF

//Default debug postfix
protobuf_DEBUG_POSTFIX:STRING=d

//Remove runtime type information in the binaries
protobuf_DISABLE_RTTI:BOOL=OFF

//Install protobuf binaries and files
protobuf_INSTALL:BOOL=ON

//Install the examples folder
protobuf_INSTALL_EXAMPLES:BOOL=OFF

//Value Computed by CMake
protobuf_IS_TOP_LEVEL:STATIC=OFF

//CMake built-in FindProtobuf.cmake module compatible
protobuf_MODULE_COMPATIBLE:BOOL=OFF

//Link static runtime libraries
protobuf_MSVC_STATIC_RUNTIME:BOOL=Off

//Value Computed by CMake
protobuf_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/protobuf-src

//Enable for verbose output
protobuf_VERBOSE:BOOL=OFF

//Value Computed by CMake
pugixml_BINARY_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/pugixml-build

//Value Computed by CMake
pugixml_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
pugixml_SOURCE_DIR:STATIC=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/pugixml-src


########################
# INTERNAL cache entries
########################

//Build example
ARGS_BUILD_EXAMPLE:INTERNAL=Off
//Build unittests
ARGS_BUILD_UNITTESTS:INTERNAL=Off
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/Administrator/Documents/git/Philips Bionic Hand
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 17 2022
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/Administrator/Documents/git/Philips Bionic Hand
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_CMAKEDIR
CMAKE_INSTALL_CMAKEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_EXAMPLEDIR
CMAKE_INSTALL_EXAMPLEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=112
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.29
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_7Z
CPACK_BINARY_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_INNOSETUP
CPACK_BINARY_INNOSETUP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NUGET
CPACK_BINARY_NUGET-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_7Z
CPACK_SOURCE_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Disable package configuration, target export and installation
DISABLE_PACKAGE_CONFIG_AND_INSTALL:INTERNAL=On
EMIL_PROTOC_COMPILER_BINARY:INTERNAL=C:/Users/Administrator/Documents/git/Philips Bionic Hand/_deps/protoc-src/bin/protoc.exe
//Build mbed TLS programs.
ENABLE_PROGRAMS:INTERNAL=Off
//Build mbed TLS tests.
ENABLE_TESTING:INTERNAL=Off
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Generate the auto-generated files as needed
GEN_FILES:INTERNAL=Off
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PUGIXML_NO_EXCEPTIONS
PUGIXML_NO_EXCEPTIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PUGIXML_NO_STL
PUGIXML_NO_STL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PUGIXML_NO_XPATH
PUGIXML_NO_XPATH-ADVANCED:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=C:/Program Files (x86)/MyProject
//Compiler reason failure
_Python3_Compiler_REASON_FAILURE:INTERNAL=
//Development reason failure
_Python3_Development_REASON_FAILURE:INTERNAL=
//Path to a program.
_Python3_EXECUTABLE:INTERNAL=_Python3_EXECUTABLE-NOTFOUND
//Interpreter reason failure
_Python3_Interpreter_REASON_FAILURE:INTERNAL=
//NumPy reason failure
_Python3_NumPy_REASON_FAILURE:INTERNAL=
//Build libprotoc
protobuf_BUILD_LIBPROTOC:INTERNAL=On
protobuf_BUILD_PROTOBUF_BINARIES:INTERNAL=Off
//Build tests
protobuf_BUILD_TESTS:INTERNAL=Off
//ADVANCED property for variable: protobuf_DEBUG_POSTFIX
protobuf_DEBUG_POSTFIX-ADVANCED:INTERNAL=1
//Test protobuf_HAVE_LD_VERSION_SCRIPT
protobuf_HAVE_LD_VERSION_SCRIPT:INTERNAL=
//ADVANCED property for variable: protobuf_MODULE_COMPATIBLE
protobuf_MODULE_COMPATIBLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: protobuf_VERBOSE
protobuf_VERBOSE-ADVANCED:INTERNAL=1
//Build with zlib support
protobuf_WITH_ZLIB:INTERNAL=Off

